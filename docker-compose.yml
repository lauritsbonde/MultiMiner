version: '3.7'

services:
    reverse-proxy:
        # The official v2 Traefik docker image
        image: traefik:v2.9
        container_name: 'traefik'
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - './etc/traefik/:/etc/traefik/:ro'
            - './traefik-ssl-certs:/ssl-certs'

    backend:
        environment:
            MONGODB_PASSWORD: ${MONGODB_PASSWORD}
            NODE_ENV: ${NODE_ENV}
        build: ./backend
        image: lauritsbonde/backend
        container_name: backend
        labels:
            - traefik.enable=true

            # Define the router for HTTPS
            - traefik.http.routers.backend.rule=Host(`${BASEURL}`) && PathPrefix(`/api`)
            - traefik.http.routers.backend.entrypoints=websecure

            # Create a middleware to strip the /api prefix
            - 'traefik.http.middlewares.myservice-strip.stripprefix.prefixes=/api'
            - 'traefik.http.middlewares.myservice-strip.stripprefix.forceslash=false'
            # Add the middleware to the router (backend)
            - 'traefik.http.routers.backend.middlewares=myservice-strip'

            - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto = https

            - 'traefik.http.middlewares.backend.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.backend.headers.accesscontrolalloworiginlist=https://localhost'
            - 'traefik.http.middlewares.backend.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.backend.headers.addvaryheader=true'

            - traefik.http.routers.backend.tls=true
            - traefik.http.routers.backend.tls.certresolver=${CERT_RESOLVER}

    frontend:
        environment:
            REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
            REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
        build: ./frontend
        image: lauritsbonde/frontend
        container_name: frontend
        labels:
            - traefik.enable=true
            - traefik.http.routers.frontend.rule=Host(`${BASEURL}`)
            - traefik.http.routers.frontend.entrypoints=websecure

            - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://api.localhost,http://api.localhost, https://multiminer.click/api, http://multiminer.click/api'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'

            - traefik.http.routers.frontend.tls=true
            - traefik.http.routers.frontend.tls.certresolver=${CERT_RESOLVER}

        depends_on:
            - backend

    mongodb_container:
        image: mongo:4.4
        container_name: mongodb
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
        volumes:
            - ./data/db:/data/db
        labels:
            - traefik.enable=false

volumes:
    data:
