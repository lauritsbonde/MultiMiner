version: '3.7'

services:
    reverse-proxy:
        # The official v2 Traefik docker image
        image: traefik:v2.9
        container_name: 'traefik'
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - './etc/traefik/:/etc/traefik/:ro'

    backend:
        environment:
            MONGODB_PASSWORD: ${MONGODB_PASSWORD}
            NODE_ENV: ${NODE_ENV}
        build: ./backend
        image: lauritsbonde/backend
        container_name: backend
        labels:
            - traefik.enable=true
            - traefik.http.routers.backend.rule=Host(`api.localhost`)
            - traefik.http.routers.backend.entrypoints=websecure

            - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://app.localhost'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'

            - traefik.http.routers.backend.tls=true
            - traefik.http.routers.backend.tls.certresolver=staging

    frontend:
        environment:
            REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
            REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
        build: ./frontend
        image: lauritsbonde/frontend
        container_name: frontend
        labels:
            - traefik.enable=true
            - traefik.http.routers.frontend.rule=Host(`app.localhost`)
            - traefik.http.routers.frontend.entrypoints=websecure

            - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://api.localhost,http://api.localhost'
            - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
            - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'

            - traefik.http.routers.frontend.tls=true
            - traefik.http.routers.frontend.tls.certresolver=staging

        depends_on:
            - backend

    #certbot:
    #   image: certbot/certbot:latest
    #  container_name: certbot
    # volumes:
    #    - ./certbot/www/:/var/www/certbot/:rw
    #   - ./certbot/conf/:/etc/letsencrypt/:rw
